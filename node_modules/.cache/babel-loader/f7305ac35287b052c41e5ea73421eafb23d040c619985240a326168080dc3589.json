{"ast":null,"code":"var _jsxFileName = \"D:\\\\FU\\\\FA24\\\\SWP\\\\NishikigoiNexus\\\\src\\\\components\\\\manage\\\\dashboard\\\\Dashboard.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport Navbar from \"../../common/Navbar/Navbar\";\nimport VerticallyNavbar from \"../../common/Navbar/VerticallyNavbar\";\nimport { handleAllFishEntry, handleCountNewMemberApi, handleFishEntryDashBoardApi, handleMonthlyRevenueApi, handleRevenueByTimeFrame } from \"../../../axios/UserService\";\nimport { useNavigate } from \"react-router\";\nimport { PieChart, Pie, Cell, Legend, Tooltip, BarChart, Bar, XAxis, YAxis, CartesianGrid } from \"recharts\";\nimport \"./DashBoard.scss\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DashBoard = () => {\n  _s();\n  const navigate = useNavigate();\n  const [fishEntries, setFishEntries] = useState([]);\n  const statusName = [\"Unfinished\", \"Successful\", \"Failed\", \"Cancelled\"];\n  const [fishEntryDashBoard, setFishEntryDashBoard] = useState({});\n  const [percentages, setPercentages] = useState({\n    unFinished: 0,\n    successful: 0,\n    failed: 0,\n    canceled: 0\n  });\n  const [total, setTotal] = useState(0);\n  const [newMembersCount, setNewMembersCount] = useState(0);\n  const [selectedTimeFrame, setSelectedTimeFrame] = useState(\"month\");\n  const [totalRevenue, setTotalRevenue] = useState([]);\n  const [monthlyRevenue, setMonthlyRevenue] = useState([]);\n  const getFishEntries = async () => {\n    const res = await handleAllFishEntry();\n    setFishEntries(res.data.$values);\n  };\n  useEffect(() => {\n    const fetchNewMembersCount = async () => {\n      try {\n        const count = await handleCountNewMemberApi(selectedTimeFrame);\n        setNewMembersCount(count);\n      } catch (error) {\n        console.error(\"Error fetching new members count:\", error);\n      }\n    };\n    fetchNewMembersCount();\n  }, [selectedTimeFrame]);\n  useEffect(() => {\n    const fetchFishEntryDashBoard = async () => {\n      try {\n        const responseFishEntryDashBoard = await handleFishEntryDashBoardApi();\n        const data = responseFishEntryDashBoard.data;\n        setFishEntryDashBoard(data);\n        setTotal(data.total);\n\n        // Calculate percentages only if total is greater than 0\n        if (data.total > 0) {\n          setPercentages({\n            unFinished: data.unfinish / data.total * 100,\n            successful: data.successful / data.total * 100,\n            failed: data.failed / data.total * 100,\n            canceled: data.cancelled / data.total * 100\n          });\n        }\n      } catch (error) {\n        console.error(\"Error fetching:\", error);\n      }\n    };\n    fetchFishEntryDashBoard();\n  }, []);\n  useEffect(() => {\n    const fetchTotalRevenue = async () => {\n      try {\n        const revenueData = await handleRevenueByTimeFrame(selectedTimeFrame);\n        setTotalRevenue(revenueData);\n      } catch (error) {\n        console.error(\"Error fetching revenue data:\", error);\n      }\n    };\n    fetchTotalRevenue();\n  }, [selectedTimeFrame]);\n  useEffect(() => {\n    const fetchMonthlyRevenue = async () => {\n      try {\n        const response = await handleMonthlyRevenueApi();\n        setMonthlyRevenue(response.data);\n      } catch (error) {\n        console.error(\"Error fetching revenue data:\", error);\n      }\n    };\n    fetchMonthlyRevenue();\n  }, [selectedTimeFrame]);\n  useEffect(() => {\n    getFishEntries();\n  }, []);\n  const processDataForPieChart = () => {\n    return [{\n      name: statusName[0],\n      value: fishEntryDashBoard.unfinish || 0\n    }, {\n      name: statusName[1],\n      value: fishEntryDashBoard.successful || 0\n    }, {\n      name: statusName[2],\n      value: fishEntryDashBoard.failed || 0\n    }, {\n      name: statusName[3],\n      value: fishEntryDashBoard.cancelled || 0\n    }];\n  };\n  const monthlyRevenueData = [{\n    month: \"Jan\",\n    revenue: [monthlyRevenue[0]]\n  }, {\n    month: \"Feb\",\n    revenue: monthlyRevenue[1]\n  }, {\n    month: \"Mar\",\n    revenue: monthlyRevenue[2]\n  }, {\n    month: \"Apr\",\n    revenue: monthlyRevenue[3]\n  }, {\n    month: \"May\",\n    revenue: monthlyRevenue[4]\n  }, {\n    month: \"Jun\",\n    revenue: monthlyRevenue[5]\n  }, {\n    month: \"Jul\",\n    revenue: monthlyRevenue[6]\n  }, {\n    month: \"Aug\",\n    revenue: monthlyRevenue[7]\n  }, {\n    month: \"Sep\",\n    revenue: monthlyRevenue[8]\n  }, {\n    month: \"Oct\",\n    revenue: monthlyRevenue[9]\n  }, {\n    month: \"Nov\",\n    revenue: monthlyRevenue[10]\n  }, {\n    month: \"Dec\",\n    revenue: monthlyRevenue[11]\n  }];\n  const COLORS = [\"#8884d8\", \"#82ca9d\", \"#ffc658\", \"#ff8042\"];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"manage-koi-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"header\",\n      children: /*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"body-content\",\n      children: [/*#__PURE__*/_jsxDEV(VerticallyNavbar, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"body-content-right\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chart-container1\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"pie-chart\",\n            children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n              children: \"Fish Entry Dashboard\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 133,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [\"Total: \", total]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 134,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(PieChart, {\n              width: 400,\n              height: 300,\n              children: [/*#__PURE__*/_jsxDEV(Pie, {\n                data: processDataForPieChart(),\n                cx: \"50%\",\n                cy: \"50%\",\n                labelLine: false,\n                label: ({\n                  name,\n                  value\n                }) => `${name}: ${value}`,\n                outerRadius: 100,\n                fill: \"#8884d8\",\n                dataKey: \"value\",\n                children: processDataForPieChart().map((entry, index) => /*#__PURE__*/_jsxDEV(Cell, {\n                  fill: COLORS[index % COLORS.length]\n                }, `cell-${index}`, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 148,\n                  columnNumber: 41\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 137,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Tooltip, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 151,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Legend, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 152,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 136,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 132,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"statistics-summary\",\n            children: [/*#__PURE__*/_jsxDEV(\"select\", {\n              className: \"time-frame\",\n              value: selectedTimeFrame,\n              onChange: e => setSelectedTimeFrame(e.target.value),\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"month\",\n                children: \"This month\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 158,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"year\",\n                children: \"This year\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 159,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"all\",\n                children: \"Overall\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 160,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 157,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"total-member\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"total-member-icon\",\n                children: /*#__PURE__*/_jsxDEV(\"i\", {\n                  className: \"fa-solid fa-users-line\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 165,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 164,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"total-member-text\",\n                children: \"Total members\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 167,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"total-member-number\",\n                children: newMembersCount\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 168,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 163,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"total-revenue\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"total-revenue-icon\",\n                children: /*#__PURE__*/_jsxDEV(\"i\", {\n                  className: \"fa-regular fa-money-bill-1\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 172,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 171,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"total-revenue-text\",\n                children: \"Total revenue\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 174,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"total-revenue-number\",\n                children: totalRevenue\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 175,\n                columnNumber: 33\n              }, this), \" \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 170,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 156,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chart-container2\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Monthly Recurring Revenue\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 182,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(BarChart, {\n            width: 1120,\n            height: 300,\n            data: monthlyRevenueData,\n            barCategoryGap: \"30%\",\n            children: [/*#__PURE__*/_jsxDEV(CartesianGrid, {\n              strokeDasharray: \"3 3\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 189,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(XAxis, {\n              dataKey: \"month\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 190,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(YAxis, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 191,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Tooltip, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 192,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Legend, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 193,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Bar, {\n              dataKey: \"revenue\",\n              fill: \"#ff8042\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 194,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 183,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 181,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 124,\n    columnNumber: 9\n  }, this);\n};\n_s(DashBoard, \"1Ec9gdRHHO1R9mrYUuzl4ARq7Jk=\", false, function () {\n  return [useNavigate];\n});\n_c = DashBoard;\nexport default DashBoard;\nvar _c;\n$RefreshReg$(_c, \"DashBoard\");","map":{"version":3,"names":["React","useEffect","useState","Navbar","VerticallyNavbar","handleAllFishEntry","handleCountNewMemberApi","handleFishEntryDashBoardApi","handleMonthlyRevenueApi","handleRevenueByTimeFrame","useNavigate","PieChart","Pie","Cell","Legend","Tooltip","BarChart","Bar","XAxis","YAxis","CartesianGrid","jsxDEV","_jsxDEV","DashBoard","_s","navigate","fishEntries","setFishEntries","statusName","fishEntryDashBoard","setFishEntryDashBoard","percentages","setPercentages","unFinished","successful","failed","canceled","total","setTotal","newMembersCount","setNewMembersCount","selectedTimeFrame","setSelectedTimeFrame","totalRevenue","setTotalRevenue","monthlyRevenue","setMonthlyRevenue","getFishEntries","res","data","$values","fetchNewMembersCount","count","error","console","fetchFishEntryDashBoard","responseFishEntryDashBoard","unfinish","cancelled","fetchTotalRevenue","revenueData","fetchMonthlyRevenue","response","processDataForPieChart","name","value","monthlyRevenueData","month","revenue","COLORS","className","children","fileName","_jsxFileName","lineNumber","columnNumber","width","height","cx","cy","labelLine","label","outerRadius","fill","dataKey","map","entry","index","length","onChange","e","target","barCategoryGap","strokeDasharray","_c","$RefreshReg$"],"sources":["D:/FU/FA24/SWP/NishikigoiNexus/src/components/manage/dashboard/Dashboard.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport Navbar from \"../../common/Navbar/Navbar\";\r\nimport VerticallyNavbar from \"../../common/Navbar/VerticallyNavbar\";\r\nimport { handleAllFishEntry, handleCountNewMemberApi, handleFishEntryDashBoardApi, handleMonthlyRevenueApi, handleRevenueByTimeFrame } from \"../../../axios/UserService\";\r\nimport { useNavigate } from \"react-router\";\r\nimport { PieChart, Pie, Cell, Legend, Tooltip, BarChart, Bar, XAxis, YAxis, CartesianGrid } from \"recharts\";\r\nimport \"./DashBoard.scss\";\r\n\r\nconst DashBoard = () => {\r\n    const navigate = useNavigate();\r\n    const [fishEntries, setFishEntries] = useState([]);\r\n    const statusName = [\"Unfinished\", \"Successful\", \"Failed\", \"Cancelled\"];\r\n    const [fishEntryDashBoard, setFishEntryDashBoard] = useState({});\r\n    const [percentages, setPercentages] = useState({\r\n        unFinished: 0,\r\n        successful: 0,\r\n        failed: 0,\r\n        canceled: 0,\r\n    });\r\n    const [total, setTotal] = useState(0);\r\n    const [newMembersCount, setNewMembersCount] = useState(0);\r\n    const [selectedTimeFrame, setSelectedTimeFrame] = useState(\"month\");\r\n    const [totalRevenue, setTotalRevenue] = useState([]);\r\n    const [monthlyRevenue, setMonthlyRevenue] = useState([]);\r\n\r\n    const getFishEntries = async () => {\r\n        const res = await handleAllFishEntry();\r\n        setFishEntries(res.data.$values);\r\n    };\r\n\r\n    useEffect(() => {\r\n        const fetchNewMembersCount = async () => {\r\n            try {\r\n                const count = await handleCountNewMemberApi(selectedTimeFrame);\r\n                setNewMembersCount(count);\r\n            } catch (error) {\r\n                console.error(\"Error fetching new members count:\", error);\r\n            }\r\n        };\r\n        fetchNewMembersCount();\r\n    }, [selectedTimeFrame]);\r\n\r\n    useEffect(() => {\r\n        const fetchFishEntryDashBoard = async () => {\r\n            try {\r\n                const responseFishEntryDashBoard = await handleFishEntryDashBoardApi();\r\n                const data = responseFishEntryDashBoard.data;\r\n                setFishEntryDashBoard(data);\r\n                setTotal(data.total);\r\n\r\n                // Calculate percentages only if total is greater than 0\r\n                if (data.total > 0) {\r\n                    setPercentages({\r\n                        unFinished: (data.unfinish / data.total) * 100,\r\n                        successful: (data.successful / data.total) * 100,\r\n                        failed: (data.failed / data.total) * 100,\r\n                        canceled: (data.cancelled / data.total) * 100,\r\n                    });\r\n                }\r\n            } catch (error) {\r\n                console.error(\"Error fetching:\", error);\r\n            }\r\n        };\r\n        fetchFishEntryDashBoard();\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        const fetchTotalRevenue = async () => {\r\n            try {\r\n                const revenueData = await handleRevenueByTimeFrame(selectedTimeFrame);\r\n                setTotalRevenue(revenueData);\r\n            } catch (error) {\r\n                console.error(\"Error fetching revenue data:\", error);\r\n            }\r\n        };\r\n        fetchTotalRevenue();\r\n    }, [selectedTimeFrame]);\r\n\r\n    useEffect(() => {\r\n        const fetchMonthlyRevenue = async () => {\r\n            try {\r\n                const response = await handleMonthlyRevenueApi();\r\n                setMonthlyRevenue(response.data);\r\n            } catch (error) {\r\n                console.error(\"Error fetching revenue data:\", error);\r\n            }\r\n        };\r\n        fetchMonthlyRevenue();\r\n    }, [selectedTimeFrame]);\r\n\r\n    useEffect(() => {\r\n        getFishEntries();\r\n    }, []);\r\n\r\n    const processDataForPieChart = () => {\r\n        return [\r\n            { name: statusName[0], value: fishEntryDashBoard.unfinish || 0 },\r\n            { name: statusName[1], value: fishEntryDashBoard.successful || 0 },\r\n            { name: statusName[2], value: fishEntryDashBoard.failed || 0 },\r\n            { name: statusName[3], value: fishEntryDashBoard.cancelled || 0 },\r\n        ];\r\n    };\r\n\r\n    const monthlyRevenueData = [\r\n        { month: \"Jan\", revenue: [monthlyRevenue[0]] },\r\n        { month: \"Feb\", revenue: monthlyRevenue[1] },\r\n        { month: \"Mar\", revenue: monthlyRevenue[2] },\r\n        { month: \"Apr\", revenue: monthlyRevenue[3] },\r\n        { month: \"May\", revenue: monthlyRevenue[4] },\r\n        { month: \"Jun\", revenue: monthlyRevenue[5] },\r\n        { month: \"Jul\", revenue: monthlyRevenue[6] },\r\n        { month: \"Aug\", revenue: monthlyRevenue[7] },\r\n        { month: \"Sep\", revenue: monthlyRevenue[8] },\r\n        { month: \"Oct\", revenue: monthlyRevenue[9] },\r\n        { month: \"Nov\", revenue: monthlyRevenue[10] },\r\n        { month: \"Dec\", revenue: monthlyRevenue[11] },\r\n    ];\r\n\r\n\r\n\r\n    const COLORS = [\"#8884d8\", \"#82ca9d\", \"#ffc658\", \"#ff8042\"];\r\n\r\n    return (\r\n        <div className=\"manage-koi-container\">\r\n            <div className=\"header\">\r\n                <Navbar />\r\n            </div>\r\n            <div className=\"body-content\">\r\n                <VerticallyNavbar />\r\n                <div className=\"body-content-right\">\r\n                    <div className=\"chart-container1\">\r\n                        <div className=\"pie-chart\">\r\n                            <h2>Fish Entry Dashboard</h2>\r\n                            <div>Total: {total}</div>\r\n\r\n                            <PieChart width={400} height={300}>\r\n                                <Pie\r\n                                    data={processDataForPieChart()}\r\n                                    cx=\"50%\"\r\n                                    cy=\"50%\"\r\n                                    labelLine={false}\r\n                                    label={({ name, value }) => `${name}: ${value}`}\r\n                                    outerRadius={100}\r\n                                    fill=\"#8884d8\"\r\n                                    dataKey=\"value\"\r\n                                >\r\n                                    {processDataForPieChart().map((entry, index) => (\r\n                                        <Cell key={`cell-${index}`} fill={COLORS[index % COLORS.length]} />\r\n                                    ))}\r\n                                </Pie>\r\n                                <Tooltip />\r\n                                <Legend />\r\n                            </PieChart>\r\n                        </div>\r\n\r\n                        <div className=\"statistics-summary\">\r\n                            <select className=\"time-frame\" value={selectedTimeFrame} onChange={(e) => setSelectedTimeFrame(e.target.value)}>\r\n                                <option value=\"month\">This month</option>\r\n                                <option value=\"year\">This year</option>\r\n                                <option value=\"all\">Overall</option>\r\n                            </select>\r\n\r\n                            <div className=\"total-member\">\r\n                                <div className=\"total-member-icon\">\r\n                                    <i className=\"fa-solid fa-users-line\"></i>\r\n                                </div>\r\n                                <div className=\"total-member-text\">Total members</div>\r\n                                <div className=\"total-member-number\">{newMembersCount}</div>\r\n                            </div>\r\n                            <div className=\"total-revenue\">\r\n                                <div className=\"total-revenue-icon\">\r\n                                    <i className=\"fa-regular fa-money-bill-1\"></i>\r\n                                </div>\r\n                                <div className=\"total-revenue-text\">Total revenue</div>\r\n                                <div className=\"total-revenue-number\">{totalRevenue}</div> {/* Display total revenue */}\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    {/* Bar Chart */}\r\n                    <div className=\"chart-container2\">\r\n                        <h3>Monthly Recurring Revenue</h3>\r\n                        <BarChart\r\n                            width={1120}\r\n                            height={300}\r\n                            data={monthlyRevenueData}\r\n                            barCategoryGap=\"30%\"\r\n                        >\r\n                            <CartesianGrid strokeDasharray=\"3 3\" />\r\n                            <XAxis dataKey=\"month\" />\r\n                            <YAxis />\r\n                            <Tooltip />\r\n                            <Legend />\r\n                            <Bar dataKey=\"revenue\" fill=\"#ff8042\" />\r\n                        </BarChart>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default DashBoard;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}