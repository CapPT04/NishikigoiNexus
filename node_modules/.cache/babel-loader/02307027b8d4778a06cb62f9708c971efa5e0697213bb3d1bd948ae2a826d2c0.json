{"ast":null,"code":"import axios from \"axios\";\nconst instance = axios.create({\n  timeout: 300000,\n  baseURL: process.env.REACT_APP_URL_API,\n  headers: {\n    \"Content-Type\": \"application/json\"\n  }\n});\n\n// instance.interceptors.response.use(\n//   (response) => {\n//     return response.data;\n//   },\n//   null\n//   // (error) => {\n//   //   return error.response;\n//   // }\n// );\n\ninstance.interceptors.response.use(function (response) {\n  return response;\n}, function (error) {\n  let res = {};\n  if (error.response) {\n    // The request was made and the server responded with a status code\n    // that falls out of the range of 2xx\n    res.data = error.response.data;\n    res.status = error.response.status;\n    res.headers = error.response.headers;\n  } else if (error.request) {\n    // The request was made but no response was received\n    // `error.request` is an instance of XMLHttpRequest in the browser \n    // and an instance of http.ClientRequest in node.js\n    console.log(error.request);\n  } else {\n    // Something happened in setting up the request that triggered an Error\n    console.log('Error', error.message);\n  }\n  return res;\n});\nexport default instance;","map":{"version":3,"names":["axios","instance","create","timeout","baseURL","process","env","REACT_APP_URL_API","headers","interceptors","response","use","error","res","data","status","request","console","log","message"],"sources":["D:/FU/FA24/SWP/NishikigoiNexus/src/axios/axiosClient.js"],"sourcesContent":["import axios from \"axios\";\r\n\r\nconst instance = axios.create({\r\n  timeout: 300000,\r\n  baseURL: process.env.REACT_APP_URL_API,\r\n  headers: {\r\n    \"Content-Type\": \"application/json\",\r\n  },\r\n});\r\n\r\n// instance.interceptors.response.use(\r\n//   (response) => {\r\n//     return response.data;\r\n//   },\r\n//   null\r\n//   // (error) => {\r\n//   //   return error.response;\r\n//   // }\r\n// );\r\n\r\ninstance.interceptors.response.use(function (response) {\r\n  return response;\r\n}, function (error) {\r\n\r\n  let res = {};\r\n  if (error.response) {\r\n    // The request was made and the server responded with a status code\r\n    // that falls out of the range of 2xx\r\n    res.data = error.response.data;\r\n    res.status = error.response.status\r\n    res.headers = error.response.headers\r\n  } else if (error.request) {\r\n    // The request was made but no response was received\r\n    // `error.request` is an instance of XMLHttpRequest in the browser \r\n    // and an instance of http.ClientRequest in node.js\r\n    console.log(error.request);\r\n  } else {\r\n    // Something happened in setting up the request that triggered an Error\r\n    console.log('Error', error.message);\r\n  }\r\n  return res;\r\n})\r\nexport default instance;\r\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,QAAQ,GAAGD,KAAK,CAACE,MAAM,CAAC;EAC5BC,OAAO,EAAE,MAAM;EACfC,OAAO,EAAEC,OAAO,CAACC,GAAG,CAACC,iBAAiB;EACtCC,OAAO,EAAE;IACP,cAAc,EAAE;EAClB;AACF,CAAC,CAAC;;AAEF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEAP,QAAQ,CAACQ,YAAY,CAACC,QAAQ,CAACC,GAAG,CAAC,UAAUD,QAAQ,EAAE;EACrD,OAAOA,QAAQ;AACjB,CAAC,EAAE,UAAUE,KAAK,EAAE;EAElB,IAAIC,GAAG,GAAG,CAAC,CAAC;EACZ,IAAID,KAAK,CAACF,QAAQ,EAAE;IAClB;IACA;IACAG,GAAG,CAACC,IAAI,GAAGF,KAAK,CAACF,QAAQ,CAACI,IAAI;IAC9BD,GAAG,CAACE,MAAM,GAAGH,KAAK,CAACF,QAAQ,CAACK,MAAM;IAClCF,GAAG,CAACL,OAAO,GAAGI,KAAK,CAACF,QAAQ,CAACF,OAAO;EACtC,CAAC,MAAM,IAAII,KAAK,CAACI,OAAO,EAAE;IACxB;IACA;IACA;IACAC,OAAO,CAACC,GAAG,CAACN,KAAK,CAACI,OAAO,CAAC;EAC5B,CAAC,MAAM;IACL;IACAC,OAAO,CAACC,GAAG,CAAC,OAAO,EAAEN,KAAK,CAACO,OAAO,CAAC;EACrC;EACA,OAAON,GAAG;AACZ,CAAC,CAAC;AACF,eAAeZ,QAAQ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}