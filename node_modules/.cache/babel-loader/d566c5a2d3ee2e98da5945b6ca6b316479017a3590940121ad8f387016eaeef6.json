{"ast":null,"code":"import axios from \"axios\";\nimport axiosClient from \"./axiosClient\";\nconst END_POINT = {\n  LOGIN: \"User/Login\",\n  SIGNUP: \"User/MemberRegister\"\n};\nexport const handleLoginApi = (userEmail, userPassword) => {\n  return axiosClient.post(`${END_POINT.LOGIN}`, {\n    email: userEmail,\n    password: userPassword\n  });\n};\nexport const handleSignUpApi = async user => {\n  try {\n    const response = await axiosClient.post(`${END_POINT.SIGNUP}`, {\n      email: \"string\",\n      password: \"string\",\n      firstName: \"string\",\n      lastName: \"string\",\n      phone: \"string\"\n    }).then(response => {\n      console.log(\"a\");\n      console.log(JSON.stringify(response));\n      if (response) {\n        console.log(\"co data\");\n      }\n    }).catch(error => console.log(error));\n\n    // if (response.status === 400) {\n    //   console.log(\"Signup successful:\", response);\n    // }\n    return response;\n  } catch (error) {\n    console.error(\"Error during signup:\", error);\n    // Handle signup errors appropriately (e.g., display an error message to the user)\n  }\n};","map":{"version":3,"names":["axios","axiosClient","END_POINT","LOGIN","SIGNUP","handleLoginApi","userEmail","userPassword","post","email","password","handleSignUpApi","user","response","firstName","lastName","phone","then","console","log","JSON","stringify","catch","error"],"sources":["D:/FU/FA24/SWP/NishikigoiNexus/src/axios/Nishikigoi.js"],"sourcesContent":["import axios from \"axios\";\r\nimport axiosClient from \"./axiosClient\";\r\nconst END_POINT = {\r\n  LOGIN: \"User/Login\",\r\n  SIGNUP: \"User/MemberRegister\",\r\n};\r\n\r\nexport const handleLoginApi = (userEmail, userPassword) => {\r\n  return axiosClient.post(`${END_POINT.LOGIN}`, {\r\n    email: userEmail,\r\n    password: userPassword,\r\n  });\r\n};\r\n\r\nexport const handleSignUpApi = async (user) => {\r\n  try {\r\n    const response = await axiosClient\r\n      .post(`${END_POINT.SIGNUP}`, {\r\n        email: \"string\",\r\n        password: \"string\",\r\n        firstName: \"string\",\r\n        lastName: \"string\",\r\n        phone: \"string\",\r\n      })\r\n      .then((response) => {\r\n        console.log(\"a\");\r\n        console.log(JSON.stringify(response));\r\n        if (response) {\r\n          console.log(\"co data\");\r\n        }\r\n      })\r\n      .catch((error) => console.log(error));\r\n\r\n    // if (response.status === 400) {\r\n    //   console.log(\"Signup successful:\", response);\r\n    // }\r\n    return response;\r\n  } catch (error) {\r\n    console.error(\"Error during signup:\", error);\r\n    // Handle signup errors appropriately (e.g., display an error message to the user)\r\n  }\r\n};\r\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,WAAW,MAAM,eAAe;AACvC,MAAMC,SAAS,GAAG;EAChBC,KAAK,EAAE,YAAY;EACnBC,MAAM,EAAE;AACV,CAAC;AAED,OAAO,MAAMC,cAAc,GAAGA,CAACC,SAAS,EAAEC,YAAY,KAAK;EACzD,OAAON,WAAW,CAACO,IAAI,CAAC,GAAGN,SAAS,CAACC,KAAK,EAAE,EAAE;IAC5CM,KAAK,EAAEH,SAAS;IAChBI,QAAQ,EAAEH;EACZ,CAAC,CAAC;AACJ,CAAC;AAED,OAAO,MAAMI,eAAe,GAAG,MAAOC,IAAI,IAAK;EAC7C,IAAI;IACF,MAAMC,QAAQ,GAAG,MAAMZ,WAAW,CAC/BO,IAAI,CAAC,GAAGN,SAAS,CAACE,MAAM,EAAE,EAAE;MAC3BK,KAAK,EAAE,QAAQ;MACfC,QAAQ,EAAE,QAAQ;MAClBI,SAAS,EAAE,QAAQ;MACnBC,QAAQ,EAAE,QAAQ;MAClBC,KAAK,EAAE;IACT,CAAC,CAAC,CACDC,IAAI,CAAEJ,QAAQ,IAAK;MAClBK,OAAO,CAACC,GAAG,CAAC,GAAG,CAAC;MAChBD,OAAO,CAACC,GAAG,CAACC,IAAI,CAACC,SAAS,CAACR,QAAQ,CAAC,CAAC;MACrC,IAAIA,QAAQ,EAAE;QACZK,OAAO,CAACC,GAAG,CAAC,SAAS,CAAC;MACxB;IACF,CAAC,CAAC,CACDG,KAAK,CAAEC,KAAK,IAAKL,OAAO,CAACC,GAAG,CAACI,KAAK,CAAC,CAAC;;IAEvC;IACA;IACA;IACA,OAAOV,QAAQ;EACjB,CAAC,CAAC,OAAOU,KAAK,EAAE;IACdL,OAAO,CAACK,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;IAC5C;EACF;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}