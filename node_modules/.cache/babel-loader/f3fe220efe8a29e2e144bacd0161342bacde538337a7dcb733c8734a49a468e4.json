{"ast":null,"code":"import axios from \"axios\";\nimport axiosClient from \"./axiosClient\";\nconst END_POINT = {\n  LOGIN: \"User/Login\",\n  SIGNUP: \"User/MemberRegister\",\n  FEE: \"Fee/GetFee\",\n  CREATEREQUEST: \"Request/CreateRequest\"\n};\nexport const handleLoginApi = (userEmail, userPassword) => {\n  return axiosClient.post(`${END_POINT.LOGIN}`, {\n    email: userEmail,\n    password: userPassword\n  });\n};\nexport const handleSignUpApi = async user => {\n  try {\n    const response = await axiosClient.post(`${END_POINT.SIGNUP}`, {\n      email: user.email,\n      password: user.password,\n      firstName: user.firstName,\n      lastName: user.lastName,\n      phone: user.phone\n    });\n    // console.log(\"Signup successful:\");\n    return response;\n  } catch (error) {\n    return error;\n  }\n};\nexport const handleFeeApi = async () => {\n  try {\n    const res = await axiosClient.get(END_POINT.FEE);\n    return res;\n  } catch (error) {\n    console.error(\"Lỗi khi gọi API FEE:\", error);\n    throw error; // Ném lỗi để các thành phần gọi hàm này có thể xử lý tiếp\n  }\n};\nexport const handleSubmitRequest = async request => {\n  try {\n    const response = await axiosClient.post(`${END_POINT.SIGNUP}`, {\n      token: request.token,\n      fishName: request.firstName,\n      shape: request.shape,\n      size: request,\n      origin: request,\n      age: request,\n      weight: request,\n      gender: request,\n      pondAddress: request,\n      pondCity: request,\n      imagePath: request,\n      note: request,\n      fee: request,\n      auctionMethod: request,\n      minPrice: request,\n      maxPrice: request,\n      increment: request,\n      expectedDate: request\n    });\n    return response;\n  } catch (error) {\n    return error;\n  }\n};","map":{"version":3,"names":["axios","axiosClient","END_POINT","LOGIN","SIGNUP","FEE","CREATEREQUEST","handleLoginApi","userEmail","userPassword","post","email","password","handleSignUpApi","user","response","firstName","lastName","phone","error","handleFeeApi","res","get","console","handleSubmitRequest","request","token","fishName","shape","size","origin","age","weight","gender","pondAddress","pondCity","imagePath","note","fee","auctionMethod","minPrice","maxPrice","increment","expectedDate"],"sources":["D:/FU/FA24/SWP/NishikigoiNexus/src/axios/UserService.js"],"sourcesContent":["import axios from \"axios\";\r\nimport axiosClient from \"./axiosClient\";\r\nconst END_POINT = {\r\n  LOGIN: \"User/Login\",\r\n  SIGNUP: \"User/MemberRegister\",\r\n  FEE: \"Fee/GetFee\",\r\n  CREATEREQUEST: \"Request/CreateRequest\",\r\n};\r\n\r\nexport const handleLoginApi = (userEmail, userPassword) => {\r\n  return axiosClient.post(`${END_POINT.LOGIN}`, {\r\n    email: userEmail,\r\n    password: userPassword,\r\n  });\r\n};\r\n\r\nexport const handleSignUpApi = async (user) => {\r\n  try {\r\n    const response = await axiosClient.post(`${END_POINT.SIGNUP}`, {\r\n      email: user.email,\r\n      password: user.password,\r\n      firstName: user.firstName,\r\n      lastName: user.lastName,\r\n      phone: user.phone,\r\n    });\r\n    // console.log(\"Signup successful:\");\r\n    return response;\r\n  } catch (error) {\r\n    return error;\r\n  }\r\n};\r\n\r\nexport const handleFeeApi = async () => {\r\n  try {\r\n    const res = await axiosClient.get(END_POINT.FEE);\r\n    return res;\r\n  } catch (error) {\r\n    console.error(\"Lỗi khi gọi API FEE:\", error);\r\n    throw error; // Ném lỗi để các thành phần gọi hàm này có thể xử lý tiếp\r\n  }\r\n};\r\n\r\nexport const handleSubmitRequest = async (request) => {\r\n  try {\r\n    const response = await axiosClient.post(`${END_POINT.SIGNUP}`, {\r\n      token: request.token,\r\n      fishName: request.firstName,\r\n      shape: request.shape,\r\n      size: request,\r\n      origin: request,\r\n      age: request,\r\n      weight: request,\r\n      gender: request,\r\n      pondAddress: request,\r\n      pondCity: request,\r\n      imagePath: request,\r\n      note: request,\r\n      fee: request,\r\n      auctionMethod: request,\r\n      minPrice: request,\r\n      maxPrice: request,\r\n      increment: request,\r\n      expectedDate: request,\r\n    });\r\n\r\n    return response;\r\n  } catch (error) {\r\n    return error;\r\n  }\r\n};\r\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,WAAW,MAAM,eAAe;AACvC,MAAMC,SAAS,GAAG;EAChBC,KAAK,EAAE,YAAY;EACnBC,MAAM,EAAE,qBAAqB;EAC7BC,GAAG,EAAE,YAAY;EACjBC,aAAa,EAAE;AACjB,CAAC;AAED,OAAO,MAAMC,cAAc,GAAGA,CAACC,SAAS,EAAEC,YAAY,KAAK;EACzD,OAAOR,WAAW,CAACS,IAAI,CAAC,GAAGR,SAAS,CAACC,KAAK,EAAE,EAAE;IAC5CQ,KAAK,EAAEH,SAAS;IAChBI,QAAQ,EAAEH;EACZ,CAAC,CAAC;AACJ,CAAC;AAED,OAAO,MAAMI,eAAe,GAAG,MAAOC,IAAI,IAAK;EAC7C,IAAI;IACF,MAAMC,QAAQ,GAAG,MAAMd,WAAW,CAACS,IAAI,CAAC,GAAGR,SAAS,CAACE,MAAM,EAAE,EAAE;MAC7DO,KAAK,EAAEG,IAAI,CAACH,KAAK;MACjBC,QAAQ,EAAEE,IAAI,CAACF,QAAQ;MACvBI,SAAS,EAAEF,IAAI,CAACE,SAAS;MACzBC,QAAQ,EAAEH,IAAI,CAACG,QAAQ;MACvBC,KAAK,EAAEJ,IAAI,CAACI;IACd,CAAC,CAAC;IACF;IACA,OAAOH,QAAQ;EACjB,CAAC,CAAC,OAAOI,KAAK,EAAE;IACd,OAAOA,KAAK;EACd;AACF,CAAC;AAED,OAAO,MAAMC,YAAY,GAAG,MAAAA,CAAA,KAAY;EACtC,IAAI;IACF,MAAMC,GAAG,GAAG,MAAMpB,WAAW,CAACqB,GAAG,CAACpB,SAAS,CAACG,GAAG,CAAC;IAChD,OAAOgB,GAAG;EACZ,CAAC,CAAC,OAAOF,KAAK,EAAE;IACdI,OAAO,CAACJ,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;IAC5C,MAAMA,KAAK,CAAC,CAAC;EACf;AACF,CAAC;AAED,OAAO,MAAMK,mBAAmB,GAAG,MAAOC,OAAO,IAAK;EACpD,IAAI;IACF,MAAMV,QAAQ,GAAG,MAAMd,WAAW,CAACS,IAAI,CAAC,GAAGR,SAAS,CAACE,MAAM,EAAE,EAAE;MAC7DsB,KAAK,EAAED,OAAO,CAACC,KAAK;MACpBC,QAAQ,EAAEF,OAAO,CAACT,SAAS;MAC3BY,KAAK,EAAEH,OAAO,CAACG,KAAK;MACpBC,IAAI,EAAEJ,OAAO;MACbK,MAAM,EAAEL,OAAO;MACfM,GAAG,EAAEN,OAAO;MACZO,MAAM,EAAEP,OAAO;MACfQ,MAAM,EAAER,OAAO;MACfS,WAAW,EAAET,OAAO;MACpBU,QAAQ,EAAEV,OAAO;MACjBW,SAAS,EAAEX,OAAO;MAClBY,IAAI,EAAEZ,OAAO;MACba,GAAG,EAAEb,OAAO;MACZc,aAAa,EAAEd,OAAO;MACtBe,QAAQ,EAAEf,OAAO;MACjBgB,QAAQ,EAAEhB,OAAO;MACjBiB,SAAS,EAAEjB,OAAO;MAClBkB,YAAY,EAAElB;IAChB,CAAC,CAAC;IAEF,OAAOV,QAAQ;EACjB,CAAC,CAAC,OAAOI,KAAK,EAAE;IACd,OAAOA,KAAK;EACd;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}