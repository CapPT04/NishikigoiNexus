{"ast":null,"code":"// axiosClient.js\nimport axios from \"axios\";\nconst instance = axios.create({\n  timeout: 300000,\n  baseURL: process.env.REACT_APP_URL_API,\n  headers: {\n    \"Content-Type\": \"application/json\"\n    // Authorization sẽ được thêm tự động bởi interceptor\n  }\n});\n\n// Thêm interceptor để thêm token vào header Authorization\ninstance.interceptors.request.use(config => {\n  const token = localStorage.getItem(\"token\"); // Hoặc nơi bạn lưu trữ token\n  if (token) {\n    config.headers.Authorization = `Bearer ${token}`;\n  }\n  return config;\n}, error => Promise.reject(error));\n\n// Xử lý phản hồi và lỗi\ninstance.interceptors.response.use(response => response.data, error => {\n  if (error.response) {\n    // Server trả về lỗi\n    console.error(\"Lỗi từ server:\", error.response.data);\n  } else if (error.request) {\n    // Yêu cầu đã được gửi nhưng không nhận được phản hồi\n    console.error(\"Không nhận được phản hồi từ server:\", error.request);\n  } else {\n    // Lỗi trong thiết lập yêu cầu\n    console.error(\"Lỗi trong thiết lập yêu cầu:\", error.message);\n  }\n  return Promise.reject(error);\n});\nexport default instance;","map":{"version":3,"names":["axios","instance","create","timeout","baseURL","process","env","REACT_APP_URL_API","headers","interceptors","request","use","config","token","localStorage","getItem","Authorization","error","Promise","reject","response","data","console","message"],"sources":["D:/FU/FA24/SWP/NishikigoiNexus/src/axios/axiosClient.js"],"sourcesContent":["// axiosClient.js\r\nimport axios from \"axios\";\r\n\r\nconst instance = axios.create({\r\n  timeout: 300000,\r\n  baseURL: process.env.REACT_APP_URL_API,\r\n  headers: {\r\n    \"Content-Type\": \"application/json\",\r\n    // Authorization sẽ được thêm tự động bởi interceptor\r\n  },\r\n});\r\n\r\n// Thêm interceptor để thêm token vào header Authorization\r\ninstance.interceptors.request.use(\r\n  (config) => {\r\n    const token = localStorage.getItem(\"token\"); // Hoặc nơi bạn lưu trữ token\r\n    if (token) {\r\n      config.headers.Authorization = `Bearer ${token}`;\r\n    }\r\n    return config;\r\n  },\r\n  (error) => Promise.reject(error)\r\n);\r\n\r\n// Xử lý phản hồi và lỗi\r\ninstance.interceptors.response.use(\r\n  (response) => response.data,\r\n  (error) => {\r\n    if (error.response) {\r\n      // Server trả về lỗi\r\n      console.error(\"Lỗi từ server:\", error.response.data);\r\n    } else if (error.request) {\r\n      // Yêu cầu đã được gửi nhưng không nhận được phản hồi\r\n      console.error(\"Không nhận được phản hồi từ server:\", error.request);\r\n    } else {\r\n      // Lỗi trong thiết lập yêu cầu\r\n      console.error(\"Lỗi trong thiết lập yêu cầu:\", error.message);\r\n    }\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\nexport default instance;\r\n"],"mappings":"AAAA;AACA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,QAAQ,GAAGD,KAAK,CAACE,MAAM,CAAC;EAC5BC,OAAO,EAAE,MAAM;EACfC,OAAO,EAAEC,OAAO,CAACC,GAAG,CAACC,iBAAiB;EACtCC,OAAO,EAAE;IACP,cAAc,EAAE;IAChB;EACF;AACF,CAAC,CAAC;;AAEF;AACAP,QAAQ,CAACQ,YAAY,CAACC,OAAO,CAACC,GAAG,CAC9BC,MAAM,IAAK;EACV,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC,CAAC,CAAC;EAC7C,IAAIF,KAAK,EAAE;IACTD,MAAM,CAACJ,OAAO,CAACQ,aAAa,GAAG,UAAUH,KAAK,EAAE;EAClD;EACA,OAAOD,MAAM;AACf,CAAC,EACAK,KAAK,IAAKC,OAAO,CAACC,MAAM,CAACF,KAAK,CACjC,CAAC;;AAED;AACAhB,QAAQ,CAACQ,YAAY,CAACW,QAAQ,CAACT,GAAG,CAC/BS,QAAQ,IAAKA,QAAQ,CAACC,IAAI,EAC1BJ,KAAK,IAAK;EACT,IAAIA,KAAK,CAACG,QAAQ,EAAE;IAClB;IACAE,OAAO,CAACL,KAAK,CAAC,gBAAgB,EAAEA,KAAK,CAACG,QAAQ,CAACC,IAAI,CAAC;EACtD,CAAC,MAAM,IAAIJ,KAAK,CAACP,OAAO,EAAE;IACxB;IACAY,OAAO,CAACL,KAAK,CAAC,qCAAqC,EAAEA,KAAK,CAACP,OAAO,CAAC;EACrE,CAAC,MAAM;IACL;IACAY,OAAO,CAACL,KAAK,CAAC,8BAA8B,EAAEA,KAAK,CAACM,OAAO,CAAC;EAC9D;EACA,OAAOL,OAAO,CAACC,MAAM,CAACF,KAAK,CAAC;AAC9B,CACF,CAAC;AAED,eAAehB,QAAQ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}