{"version":3,"file":"static/js/926.48418b89.chunk.js","mappings":"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","sources":["components/manage/AuctionDetail.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport \"./AuctionDetail.scss\";\r\nimport VerticallyNavbar from \"../common/Navbar/VerticallyNavbar\";\r\nimport { useLocation } from \"react-router\";\r\nimport { handleAddFishEntryForAuctionApi, handleDeleteFishEntryInAuctionApi, handleGetFishEntryForAuctionApi, handleGetFishEntryInAuction } from \"../../axios/UserService\";\r\nimport logo from \"../../assets/images/logo_png.png\";\r\nimport { handleUpdateAuctionDetailApi } from \"../../axios/UserService\"\r\nimport { toast, ToastContainer } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nconst AuctionDetail = () => {\r\n    const location = useLocation();\r\n    const auction = location.state || {}; // Default to empty object\r\n    const [fishEntryInAuction, setFishEntryInAuction] = useState([]);\r\n    const [startTime, setStartTime] = useState(\"\");\r\n    const [finishTime, setFinishTime] = useState(\"\");\r\n    console.log(startTime);\r\n    console.log(finishTime);\r\n    const [fishEntryForAuction, setFishEntryForAuction] = useState(\"\");\r\n    const [showFishEntryTable, setShowFishEntryTable] = useState(false);\r\n\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        const fetchAuctions = async () => {\r\n            try {\r\n                console.log(\"Location Object:\", location);\r\n                console.log(\"Auction Data:\", auction);\r\n                const response = await handleGetFishEntryInAuction(parseInt(auction.auctionId, 10));\r\n                setFishEntryInAuction(response.data.$values || []);\r\n            } catch (error) {\r\n                console.error(\"Error fetching auctions:\", error);\r\n            }\r\n        };\r\n        fetchAuctions();\r\n    }, [location, auction]);\r\n\r\n    const handleUpdateBtn = async (fishEntry) => {\r\n        try {\r\n            const updatedStartTime = startTime || fishEntry.startDate;\r\n            const updatedFinishTime = finishTime || fishEntry.endDate;\r\n            const response = await handleUpdateAuctionDetailApi(fishEntry.fishEntryId, updatedStartTime, updatedFinishTime);\r\n            console.log(response);\r\n\r\n            if (response && response.status === 200) {\r\n                toast.success(\"Auction updated successfully!\", {\r\n                    position: \"top-right\",\r\n                    autoClose: 3000,\r\n                    hideProgressBar: false,\r\n                    closeOnClick: true,\r\n                    pauseOnHover: true,\r\n                    draggable: true,\r\n                    progress: undefined,\r\n                });\r\n            } else {\r\n                toast.error(\"Failed to update auction. Please try again.\", {\r\n                    position: \"top-right\",\r\n                    autoClose: 5000,\r\n                    hideProgressBar: false,\r\n                    closeOnClick: true,\r\n                    pauseOnHover: true,\r\n                    draggable: true,\r\n                    progress: undefined,\r\n                });\r\n            }\r\n        } catch (error) {\r\n            console.error(\"Error updating auction:\", error); // Log the error for debugging\r\n            toast.error(\"An error occurred while updating. Please try again.\", {\r\n                position: \"top-right\",\r\n                autoClose: 5000,\r\n                hideProgressBar: false,\r\n                closeOnClick: true,\r\n                pauseOnHover: true,\r\n                draggable: true,\r\n                progress: undefined,\r\n            });\r\n        }\r\n    };\r\n\r\n    const handleDeleteFishEntryInAuction = async (fishEntry) => {\r\n        try {\r\n            const response = await handleDeleteFishEntryInAuctionApi(auction.auctionId, fishEntry.fishEntryId);\r\n            const updatedAuctionEntriesResponse = await handleGetFishEntryInAuction(parseInt(auction.auctionId, 10));\r\n            setFishEntryInAuction(updatedAuctionEntriesResponse.data.$values || []);\r\n            const availableFishEntriesResponse = await handleGetFishEntryForAuctionApi();\r\n            setFishEntryForAuction(availableFishEntriesResponse.data.$values || []);\r\n        } catch (error) {\r\n            throw error;\r\n        }\r\n    }\r\n\r\n    const handleAddFishBtn = async () => {\r\n        try {\r\n            const response = await handleGetFishEntryForAuctionApi();\r\n            console.log(response);\r\n            setFishEntryForAuction(response.data.$values);\r\n            setShowFishEntryTable(true);\r\n\r\n\r\n\r\n        } catch (error) {\r\n            throw error;\r\n        }\r\n    }\r\n    const handleAddFishEntryToAuction = async (fishEntry) => {\r\n        try {\r\n            const response = await handleAddFishEntryForAuctionApi(fishEntry.fishEntryId, auction.auctionId, sessionStorage.getItem(\"token\"));\r\n            console.log(response);\r\n\r\n            if (response && response.status === 200) {\r\n                // Fetch updated fish entries in auction after successful addition\r\n                const updatedAuctionEntriesResponse = await handleGetFishEntryInAuction(parseInt(auction.auctionId, 10));\r\n                setFishEntryInAuction(updatedAuctionEntriesResponse.data.$values || []); // Update state for auction entries\r\n\r\n                // Fetch available fish entries for auction\r\n                const availableFishEntriesResponse = await handleGetFishEntryForAuctionApi();\r\n                setFishEntryForAuction(availableFishEntriesResponse.data.$values || []); // Update state for available fish entries\r\n\r\n                toast.success(\"Fish entry added to auction successfully!\", {\r\n                    position: \"top-right\",\r\n                    autoClose: 3000,\r\n                    hideProgressBar: false,\r\n                    closeOnClick: true,\r\n                    pauseOnHover: true,\r\n                    draggable: true,\r\n                    progress: undefined,\r\n                });\r\n            } else {\r\n                toast.error(\"Failed to add fish entry. Please try again.\", {\r\n                    position: \"top-right\",\r\n                    autoClose: 5000,\r\n                    hideProgressBar: false,\r\n                    closeOnClick: true,\r\n                    pauseOnHover: true,\r\n                    draggable: true,\r\n                    progress: undefined,\r\n                });\r\n            }\r\n        } catch (error) {\r\n            console.error(\"Error adding fish entry:\", error);\r\n            toast.error(\"An error occurred while adding the fish entry. Please try again.\", {\r\n                position: \"top-right\",\r\n                autoClose: 5000,\r\n                hideProgressBar: false,\r\n                closeOnClick: true,\r\n                pauseOnHover: true,\r\n                draggable: true,\r\n                progress: undefined,\r\n            });\r\n        }\r\n    };\r\n\r\n\r\n\r\n\r\n    return (\r\n        <div className=\"auction-detail-container\">\r\n            <ToastContainer />\r\n            <div className=\"header\">\r\n                <div className=\"navigation-bar\">\r\n                    <div className=\"navigation-bar-left-content\">\r\n                        <img className=\"logo\" src={logo} alt=\"\" />\r\n                        <div className=\"project-name\">Nishikigoi Nexus</div>\r\n                    </div>\r\n\r\n                    <div className=\"navigation-bar-right-content\">\r\n                        <a className=\"staff\">STAFF</a>\r\n                        <a className=\"home\">HOME</a>\r\n                        <a className=\"auction\">AUCTION</a>\r\n                        <a className=\"blog\">BLOG</a>\r\n                        <a className=\"about\">ABOUT</a>\r\n                        <a className=\"account\">ACCOUNT</a>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"body-content-auction-detail\">\r\n                <VerticallyNavbar />\r\n\r\n                <div className=\"body-content-right-auction-detail\">\r\n                    <div className=\"auction-detail-content\">\r\n                        <div className=\"auction-detail-content-row1\">\r\n                            <div className=\"status\">Status: &nbsp;\r\n                                {auction.status === 1 && 'Preparing'}\r\n                                {auction.status === 2 && 'Waiting'}\r\n                                {auction.status === 3 && 'Bidding'}\r\n                                {auction.status === 4 && 'Ended'}\r\n                            </div>\r\n                            <select name=\"\" id=\"\" className=\"set-status\">\r\n                                <option value=\"\">Preparing &nbsp;&nbsp;</option>\r\n                                <option value=\"\">Waiting &nbsp;&nbsp; </option>\r\n                                <option value=\"\">Bidding &nbsp;&nbsp; </option>\r\n                                <option value=\"\">Ended &nbsp;&nbsp; </option>\r\n                            </select>\r\n                        </div>\r\n\r\n                        <div className=\"auction-detail-content-row2\">Auction Detail</div>\r\n\r\n                        <div className=\"auction-detail-content-row4\">\r\n                            <label htmlFor=\"start-date-input\" className=\"start-date-label\">\r\n                                Start Date\r\n                            </label>\r\n                            <input\r\n                                type=\"datetime-local\"\r\n                                className=\"start-date-input\"\r\n                                value={auction?.startDate || \"YYYY-MM-DDTHH:MM\"}\r\n                                readOnly // Assuming this is a read-only field; remove if editable\r\n                            />\r\n                        </div>\r\n\r\n                        <div className=\"auction-detail-content-row5\">\r\n                            <div className=\"add-fish\">\r\n                                <i\r\n                                    className=\"fa-solid fa-plus\"\r\n                                    onClick={() => handleAddFishBtn()}\r\n                                ></i>\r\n\r\n                            </div>\r\n                        </div>\r\n                        {showFishEntryTable && (\r\n                            <div className=\"auction-detail-content-row7\">\r\n                                <table className=\"table-added-fish-entry\">\r\n                                    <thead>\r\n                                        <tr>\r\n                                            <th>No</th>\r\n                                            <th>FishEntry ID</th>\r\n                                            <th>Expected Date</th>\r\n                                            <th>Method</th>\r\n                                            <th>Add</th>\r\n                                        </tr>\r\n                                    </thead>\r\n                                    <tbody>\r\n                                        {fishEntryForAuction.length > 0 ? (\r\n                                            fishEntryForAuction.map((fishEntry, index) => (\r\n                                                <tr key={fishEntry.fishEntryId || index}>\r\n                                                    <td>{index + 1}</td>\r\n                                                    <td>{fishEntry.fishEntryId || \"Unknown Fish\"}</td>\r\n                                                    <td>{fishEntry.expectedDate || \"N/A\"}</td>\r\n                                                    <td>\r\n                                                        {fishEntry.auctionMethod === 1 && 'FixedPriceSale'}\r\n                                                        {fishEntry.auctionMethod === 2 && \"SecretBid\"}\r\n                                                        {fishEntry.auctionMethod === 3 && \"PublicBid\"}\r\n                                                        {fishEntry.auctionMethod === 4 && \"DutchAuction\"}\r\n                                                    </td>\r\n\r\n                                                    <td>\r\n                                                        <i class=\"fa-solid fa-plus\"\r\n                                                            onClick={() => handleAddFishEntryToAuction(fishEntry)}\r\n                                                        ></i>\r\n\r\n                                                    </td>\r\n                                                </tr>\r\n                                            ))\r\n                                        ) : (\r\n                                            <tr>\r\n                                                <td colSpan=\"5\">No FishEntry available</td>\r\n                                            </tr>\r\n                                        )}\r\n                                    </tbody>\r\n\r\n                                </table>\r\n                            </div>\r\n                        )}\r\n\r\n                        <div className=\"auction-detail-content-row6\">\r\n                            <table className=\"table-manage-auction\">\r\n                                <thead>\r\n                                    <tr>\r\n                                        <th>No</th>\r\n                                        <th>Fish Entry</th>\r\n                                        <th>Start Time</th>\r\n                                        <th>Finish Time</th>\r\n                                        <th>Status</th>\r\n                                        <th>Update</th>\r\n                                        <th>Delete</th>\r\n                                    </tr>\r\n                                </thead>\r\n                                <tbody>\r\n                                    {fishEntryInAuction.length > 0 ? (\r\n                                        fishEntryInAuction.map((fishEntry, index) => (\r\n                                            <tr key={fishEntry.id || index}>\r\n                                                <td>{index + 1}</td>\r\n                                                <td>{fishEntry.fishEntryId || \"Unknown Fish\"}</td>\r\n                                                <td>\r\n                                                    <input\r\n                                                        type=\"datetime-local\"\r\n                                                        className=\"start-time-input\"\r\n                                                        onChange={(even) => setStartTime(even.target.value)}\r\n                                                        defaultValue={fishEntry.startDate}\r\n                                                    />\r\n                                                </td>\r\n                                                <td>\r\n                                                    <input\r\n                                                        type=\"datetime-local\"\r\n                                                        className=\"finish-time-input\"\r\n                                                        onChange={(even) => setFinishTime(even.target.value)}\r\n                                                        defaultValue={fishEntry.endDate}\r\n                                                    />\r\n                                                </td>\r\n                                                <td>\r\n                                                    {fishEntry.status === 1 && 'Preparing'}\r\n                                                    {fishEntry.status === 2 && 'Waiting'}\r\n                                                    {fishEntry.status === 3 && 'Bidding'}\r\n                                                    {fishEntry.status === 4 && 'Ended'}</td>\r\n                                                <td>\r\n                                                    <button\r\n                                                        className=\"update-btn\"\r\n                                                        onClick={() => handleUpdateBtn(fishEntry)}\r\n                                                    >Update</button>\r\n                                                </td>\r\n                                                <td>\r\n                                                    <i\r\n\r\n                                                        className=\"fa-solid fa-trash delete-icon\"\r\n                                                        onClick={() => handleDeleteFishEntryInAuction(fishEntry)}\r\n                                                    ></i>\r\n                                                </td>\r\n                                            </tr>\r\n                                        ))) : (\r\n                                        <tr>\r\n                                            <td colSpan=\"7\">No FishEntry available</td>\r\n                                        </tr>\r\n                                    )}\r\n                                </tbody>\r\n                            </table>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default AuctionDetail;\r\n"],"names":["AuctionDetail","location","useLocation","auction","state","fishEntryInAuction","setFishEntryInAuction","useState","startTime","setStartTime","finishTime","setFinishTime","console","log","fishEntryForAuction","setFishEntryForAuction","showFishEntryTable","setShowFishEntryTable","useEffect","async","response","handleGetFishEntryInAuction","parseInt","auctionId","data","$values","error","fetchAuctions","_jsxs","className","children","_jsx","ToastContainer","src","logo","alt","VerticallyNavbar","status","name","id","value","htmlFor","type","startDate","readOnly","onClick","handleGetFishEntryForAuctionApi","handleAddFishBtn","length","map","fishEntry","index","fishEntryId","expectedDate","auctionMethod","class","handleAddFishEntryForAuctionApi","sessionStorage","getItem","updatedAuctionEntriesResponse","availableFishEntriesResponse","toast","success","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","handleAddFishEntryToAuction","colSpan","onChange","even","target","defaultValue","endDate","updatedStartTime","updatedFinishTime","handleUpdateAuctionDetailApi","handleUpdateBtn","handleDeleteFishEntryInAuctionApi","handleDeleteFishEntryInAuction"],"sourceRoot":""}