{"version":3,"file":"static/js/633.07d32400.chunk.js","mappings":"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","sources":["components/public/SignupPage/SignupPage.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { NavLink, useNavigate } from \"react-router-dom\";\r\n\r\nimport \"./SignupPage.scss\";\r\nimport { handleSignUpApi } from \"../../../axios/UserService\";\r\nimport axios from \"axios\";\r\n\r\nconst SignupPage = () => {\r\n  const navigate = useNavigate();\r\n  const [firstName, setFirstName] = useState(\"\");\r\n  const [lastName, setLastName] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [rePassword, setRePassword] = useState(\"\");\r\n  const [phoneNumber, setPhoneNumber] = useState(\"\");\r\n  const [btnReady, setBtnReady] = useState(true);\r\n  const [errorMessage, setErrorMessage] = useState(\"\");\r\n  const [hasInput, setHasInput] = useState(false);\r\n\r\n  const handleSignUp = async () => {\r\n    const user = {\r\n      email,\r\n      password,\r\n      firstName,\r\n      lastName,\r\n      phone: phoneNumber,\r\n    };\r\n    try {\r\n      const response = await handleSignUpApi(user);\r\n      if (response.status === 200) {\r\n        console.log(\"successful\");\r\n        navigate(\"/login\");\r\n      }\r\n      if (response.status === 400) {\r\n        setErrorMessage(response.data.message);\r\n      }\r\n    } catch (err) {\r\n      console.log(\"xảy ra lỗi\");\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (hasInput) {\r\n      if (\r\n        !(\r\n          firstName &&\r\n          lastName &&\r\n          email &&\r\n          password &&\r\n          rePassword &&\r\n          phoneNumber\r\n        )\r\n      ) {\r\n        setErrorMessage(\"Please fill in all fields\");\r\n        setBtnReady(true);\r\n      } else if (validateEmail(email) === false) {\r\n        setErrorMessage(\"Email is invalid\");\r\n        setBtnReady(true);\r\n      } else if (rePassword !== password) {\r\n        setErrorMessage(\"Wrong confirm password\");\r\n        setBtnReady(true);\r\n      } else {\r\n        setErrorMessage(\"\");\r\n        setBtnReady(false);\r\n      }\r\n    }\r\n  }, [firstName, lastName, email, password, rePassword, phoneNumber]);\r\n\r\n  return (\r\n    <div className=\"signup-page\">\r\n      <div className=\"signup-content\">\r\n        <div className=\"left-content\">\r\n          <div className=\"logo-name\">\r\n            <div className=\"logo\"></div>\r\n            <div className=\"name\">Nishikigoi Nexus</div>\r\n          </div>\r\n        </div>\r\n        <div className=\"right-content\">\r\n          <div className=\"signup-form\">\r\n            <div className=\"signup-form-title\">Sign Up</div>\r\n            {errorMessage && (\r\n              <div className=\"error-message\">{errorMessage}</div>\r\n            )}{\" \"}\r\n            <div className=\"signup-form-content\">\r\n              <div className=\"full-name\">\r\n                <div className=\"first-name\">\r\n                  <div className=\"first-name-title\">First Name</div>\r\n                  <input\r\n                    className=\"first-name-input\"\r\n                    type=\"text\"\r\n                    onChange={(e) => {\r\n                      setFirstName(e.target.value);\r\n                      setHasInput(true);\r\n                    }}\r\n                  />\r\n                </div>\r\n                <div className=\"last-name\">\r\n                  <div className=\"last-name-title\">Last Name</div>\r\n                  <input\r\n                    className=\"last-name-input\"\r\n                    type=\"text\"\r\n                    name=\"\"\r\n                    id=\"\"\r\n                    onChange={(e) => {\r\n                      setLastName(e.target.value);\r\n                      setHasInput(true);\r\n                    }}\r\n                  />\r\n                </div>\r\n              </div>\r\n              <div className=\"email\">\r\n                <div className=\"email-title\">Email</div>\r\n                <input\r\n                  className=\"email-input\"\r\n                  type=\"text\"\r\n                  onChange={(e) => {\r\n                    setEmail(e.target.value);\r\n                    setHasInput(true);\r\n                  }}\r\n                  required={true}\r\n                />\r\n              </div>\r\n              <div className=\"password\">\r\n                <div className=\"password-title\">Password</div>\r\n                <input\r\n                  className=\"password-input\"\r\n                  type=\"password\"\r\n                  onChange={(e) => {\r\n                    setPassword(e.target.value);\r\n                    setHasInput(true);\r\n                  }}\r\n                />\r\n              </div>\r\n              <div className=\"confirm-password\">\r\n                <div className=\"confirm-password-title\">Confirm Password</div>\r\n                <input\r\n                  className=\"confirm-password-input\"\r\n                  type=\"password\"\r\n                  onChange={(e) => {\r\n                    setRePassword(e.target.value);\r\n                    setHasInput(true);\r\n                  }}\r\n                />\r\n              </div>\r\n              <div className=\"phone-number\">\r\n                <div className=\"phone-number-title\">Phone Number</div>\r\n                <input\r\n                  className=\"phone-number-input\"\r\n                  type=\"text\"\r\n                  onChange={(e) => {\r\n                    setPhoneNumber(e.target.value);\r\n                    setHasInput(true);\r\n                  }}\r\n                />\r\n              </div>\r\n              <div className=\"signup-and-login\">\r\n                <button\r\n                  className={`signup-btn ${!btnReady ? \"btn-active\" : \"\"}`}\r\n                  onClick={handleSignUp}\r\n                  disabled={btnReady}\r\n                >\r\n                  Sign up\r\n                </button>\r\n                <div className=\"text-with-login\">\r\n                  Already have an account?\r\n                  <a className=\"login\" onClick={() => navigate(\"/login\")}>\r\n                    Login\r\n                  </a>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div className=\"note\">\r\n              By logging in to Nishikigoi Nexus, we confirm that you have\r\n              carefully read, understood and agree to comply with our{\" \"}\r\n              <a className=\"term-of-service\" href=\"#\">\r\n                Terms of Service\r\n              </a>{\" \"}\r\n              and{\" \"}\r\n              <a className=\"private-policy\" href=\"#\">\r\n                Privacy Policy\r\n              </a>{\" \"}\r\n              .\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport const validateEmail = (email) => {\r\n  const regex = /^[^\\s@]+@[^\\s@]+\\.+[\\w]{2,}$/i;\r\n  if (regex.test(email)) {\r\n    return true;\r\n  }\r\n  return false;\r\n};\r\n\r\nexport default SignupPage;\r\n"],"names":["validateEmail","email","test","SignupPage","navigate","useNavigate","firstName","setFirstName","useState","lastName","setLastName","setEmail","password","setPassword","rePassword","setRePassword","phoneNumber","setPhoneNumber","btnReady","setBtnReady","errorMessage","setErrorMessage","hasInput","setHasInput","useEffect","_jsx","className","children","_jsxs","type","onChange","e","target","value","name","id","required","onClick","async","user","phone","response","handleSignUpApi","status","console","log","data","message","err","disabled","href"],"sourceRoot":""}